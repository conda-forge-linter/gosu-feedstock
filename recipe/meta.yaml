{% set version = "1.11" %}
{% set sha256 = "d03208fd7ef983e4a606f861a5efcdc5a1980952a91febba3f67057800da6701" %}
{% set runc_version = "1.0.0-rc5" %}
{% set runc_sha256 = "770e180d1cca1f3c1a67512ebf9720caafe97af4fc2fe12fa43a3cf7bfa77522" %}

package:
  name: gosu
  version: {{ version }}

source:
  - folder: src/github.com/tianon/gosu
    url: https://github.com/tianon/gosu/archive/{{ version }}.tar.gz
    sha256: {{ sha256 }}

  - folder: src/github.com/opencontainers/runc
    url: https://github.com/opencontainers/runc/archive/v{{ runc_version }}.tar.gz
    sha256: {{ runc_sha256 }}

build:
  number: 1000
  skip: true  # [not linux]

requirements:
  build:
    - {{ compiler('go') }}

test:
  commands:
    - which gosu

    # No real help option, but try anyways.
    - gosu --help || true

about:
  home: https://github.com/tianon/gosu
  license: GPL-3
  license_family: GPL
  license_file: src/github.com/tianon/gosu/LICENSE
  summary: Simple Go-based setuid+setgid+setgroups+exec

  description: |
    This is a simple tool grown out of the simple fact that `su` and `sudo`
    have very strange and often annoying TTY and signal-forwarding behavior.
    They're also somewhat complex to setup and use (especially in the case of
    `sudo`), which allows for a great deal of expressivity, but falls flat if
    all you need is "run this specific application as this specific user and
    get out of the pipeline".
  dev_url: https://github.com/tianon/gosu
  doc_url: https://github.com/tianon/gosu

extra:
  recipe-maintainers:
    - jakirkham
